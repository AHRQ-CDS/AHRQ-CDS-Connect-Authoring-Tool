library "<%=name%>" version '<%=version%>'

using <%=dataModel.name%> version '<%= dataModel.version %>'
<% includeLibraries.map(includeLibrary => {%>
include <%=includeLibrary.name%> version '<%=includeLibrary.version%>'<%if (includeLibrary.alias) {%> called <%=includeLibrary.alias%> <%}%>
<%})-%>
<% codeSystemMap.forEach((resource, key) => {%>
codesystem "<%=key%>": '<%=resource%>' <%}) -%>

<% resourceMap.forEach((resource, key) => {%>
valueset "<%=resource.name%>": '<%=resource.oid%>'<%});-%>

<% codeMap.forEach((code) => { %>
code "<%=code.name%>": '<%=code.code%>' from "<%=code.codeSystem.name%>"
  display '<%=code.display%>'
<%})-%>

<% conceptMap.forEach((concept) => {%>
concept "<%=concept.name%>" : { <%concept.codes.forEach((code, index) => {%>"<%if (index > 0) {%>, <%}%><%=code.name%>"<%})%>}
  display '<%=concept.display%>'
<%})-%>

<% paramContexts.forEach((parameter, key) => {-%>
parameter "<%=parameter.element_name%>" default <%=parameter.default%>
<%});%>

context <%=context%>

<% referencedElements.forEach((element) => { -%>
define "<%=element.name%>":
  <%-element.valuesets.map(v => {
  return `[${element.type}: "${v.name}"]` }).join(`
  union `);%>
<%}) -%>

